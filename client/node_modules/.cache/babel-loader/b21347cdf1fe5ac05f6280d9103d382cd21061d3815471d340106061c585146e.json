{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imadm\\\\my-portfolio\\\\src\\\\components\\\\Contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  // Set up state for form fields\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = {\n      name: name,\n      email: email,\n      message: message\n    };\n    try {\n      const response = await fetch('http://localhost:5000/send-email', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (response.status === 200) {\n        console.log('Email sent successfully!');\n      } else {\n        console.error('Error sending email');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"contact\",\n    className: \"bg-black text-white py-16 px-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-4xl font-bold text-center mb-8\",\n      children: \"Contact Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col md:flex-row gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:w-1/2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"Get in Touch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"space-y-4\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              className: \"block text-sm font-medium\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              name: \"name\",\n              className: \"w-full p-3 mt-1 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-purple-600 text-black\",\n              value: name,\n              onChange: e => setName(e.target.value) // Bind to state\n              ,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"block text-sm font-medium\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              className: \"w-full p-3 mt-1 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-purple-600 text-black\",\n              value: email,\n              onChange: e => setEmail(e.target.value) // Bind to state\n              ,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"message\",\n              className: \"block text-sm font-medium\",\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"message\",\n              name: \"message\",\n              rows: \"4\",\n              className: \"w-full p-3 mt-1 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-purple-600 text-black\",\n              value: message,\n              onChange: e => setMessage(e.target.value) // Bind to state\n              ,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"w-full bg-purple-600 text-white py-3 mt-4 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-600\",\n            children: \"Send Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:w-1/2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-2xl font-semibold mb-4 text-white\",\n          children: \"My Blog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-6 rounded-md shadow-md hover:shadow-lg transition-all duration-300\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-xl font-semibold text-black\",\n              children: \"How I Built My Portfolio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500 text-sm\",\n              children: \"November 22, 2024\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-2 text-black\",\n              children: \"Building my portfolio has been a rewarding journey that reflects my growth as a web developer and showcases my technical expertise. Here\\u2019s a breakdown of how I brought it to life, step by step: 1. Planning and Conceptualization I started with a clear vision of what my portfolio should achieve: Showcase my skills and projects in a structured and visually appealing way. Highlight my technical strengths in both front-end and back-end development. Build a platform that is functional, responsive, and easy to update. 2. Front-End Development For the front-end, I used React.js, leveraging its component-based architecture to create reusable, dynamic, and responsive components. Key features include: Tailwind CSS for styling: This made the development process faster and allowed me to implement a sleek, modern design. Interactive Elements: I integrated features like a carousel for project images, animated stats, and smooth scroll functionality to make the user experience engaging. A clean, black-and-white theme to align with my personal aesthetic. 3. Back-End and Server-Side Functionality I set up a Node.js and Express server to handle the back-end needs of the portfolio: Contact Form: Implemented a contact form using Nodemailer to send emails securely. This involved setting up a back-end API and integrating Gmail's SMTP server with proper environment variable security. Ensured the server was scalable and deployed alongside the front-end seamlessly. 4. Deployment and Hosting I deployed my portfolio using Vercel, a platform that excels in hosting React applications: Custom Domains: Vercel allowed me to deploy my front-end and back-end separately or together. Optimized for performance with fast loading times and smooth navigation. 5. Key Features of the Portfolio About Section: Highlights my journey and passion for web development with interactive design elements. Projects Section: Each project is presented with detailed descriptions and an image carousel showcasing multiple visuals per project. Skills Section: Lists my technical expertise in tools and frameworks like React, Node.js, MongoDB, Tailwind CSS, and more. Dynamic Stats: Animated counters for metrics like completed projects and years of experience. Contact Section: A functional contact form integrated with back-end email handling. 6. Challenges and Solutions Building this portfolio presented several challenges: Back-End Security: Managing secure email communication required careful configuration of environment variables and app passwords. Responsive Design: Ensuring the site looked great across all devices was a priority, achieved through Tailwind CSS utilities. Carousel Integration: Selecting and customizing a React-based carousel library to suit my needs for displaying multiple images dynamically. 7. Outcome and Learnings The process of building my portfolio not only allowed me to showcase my skills but also provided me with valuable experience in full-stack development: Enhanced my ability to design and deploy secure, scalable applications. Improved my knowledge of deployment platforms and server-side integration. Gained insights into creating a cohesive user experience. Future Plans I plan to continuously update my portfolio with new projects, skills, and features, such as: Integrating real-time data using web sockets or APIs. Adding blogs or articles about my journey in web development. Implementing advanced animations and transitions to improve interactivity. This portfolio is a reflection of my passion for web development and my commitment to delivering high-quality, user-focused solutions.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-6 rounded-md shadow-md hover:shadow-lg transition-all duration-300\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-xl font-semibold text-black\",\n              children: \"Learning Journey\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500 text-sm\",\n              children: \"October 30, 2024\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-2 text-black\",\n              children: \"React has been a game-changer in the way I build user interfaces...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"RRZHkkL1zEvDzxfy/n8TaoP+d9E=\");\n_c = Contact;\nexport default Contact;\n\n// const Contact = () => {\n//   return (\n//     <section id=\"contact\" className=\"bg-black text-white py-16 px-8\">\n//       <h2 className=\"text-4xl font-bold text-center mb-8\">Contact Me</h2>\n//       <div className=\"flex flex-col md:flex-row gap-8\">\n//         <div className=\"md:w-1/2\">\n//           <h3 className=\"text-2xl font-semibold mb-4\">Get in Touch</h3>\n//           <form className=\"space-y-4\">\n//             <div>\n//               <label htmlFor=\"name\" className=\"block text-sm font-medium\">\n//                 Name\n//               </label>\n//               <input\n//                 type=\"text\"\n//                 id=\"name\"\n//                 name=\"name\"\n//                 className=\"w-full p-3 mt-1 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-purple-600 text-black\"\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label htmlFor=\"email\" className=\"block text-sm font-medium\">\n//                 Email\n//               </label>\n//               <input\n//                 type=\"email\"\n//                 id=\"email\"\n//                 name=\"email\"\n//                 className=\"w-full p-3 mt-1 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-purple-600 text-black\"\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label htmlFor=\"message\" className=\"block text-sm font-medium\">\n//                 Message\n//               </label>\n//               <textarea\n//                 id=\"message\"\n//                 name=\"message\"\n//                 rows=\"4\"\n//                 className=\"w-full p-3 mt-1 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-purple-600 text-black\"\n//                 required\n//               ></textarea>\n//             </div>\n//             <button\n//               type=\"submit\"\n//               className=\"w-full bg-purple-600 text-white py-3 mt-4 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-600\"\n//             >\n//               Send Message\n//             </button>\n//           </form>\n//         </div>\n//         {/* Blog section next to Contact form */}\n//         <div className=\"md:w-1/2\">\n//           <h3 className=\"text-2xl font-semibold mb-4 text-white\">My Blog</h3> {/* Changed to text-white */}\n//           <div className=\"space-y-4\">\n//             <div className=\"bg-white p-6 rounded-md shadow-md hover:shadow-lg transition-all duration-300\">\n//               <h4 className=\"text-xl font-semibold text-black\">How I Built My Portfolio</h4> {/* Changed to text-black */}\n//               <p className=\"text-gray-500 text-sm\">November 22, 2024</p>\n//               <p className=\"mt-2 text-black\">\n//               Building my personal portfolio was a key project for me, not only because it represents my work, but also because it allowed me to showcase my web development skills. In this post, I’ll walk you through how I built my portfolio from scratch, the technologies I used, the design choices I made, and some lessons I learned along the way.\n\n// 1. Defining the Goal\n// The first step in building my portfolio was to define its purpose. I wanted it to:\n\n// Showcase my web development skills.\n// Provide a space for my projects, blogs, and skills.\n// Be easy to update as I work on new projects.\n// Have a minimalist design that focuses on the content.\n// 2. Planning the Structure\n// Next, I planned out the basic structure of my portfolio. I decided to include the following sections:\n\n// Home: A brief introduction, my name, and a short tagline.\n// About: A section where I talk about myself and my journey as a developer.\n// Projects: A showcase of the projects I’ve worked on, each with descriptions and images.\n// Skills: A section highlighting my technical skills, tools, and technologies I am proficient in.\n// Contact: A form for potential clients or employers to get in touch with me.\n// Blog: A place for sharing my thoughts, tutorials, and experiences in the field of web development.\n// 3. Choosing the Technologies\n// For the front-end, I chose to use React to build the components of my portfolio. React is a great choice because:\n\n// It allows me to build reusable components.\n// It’s highly efficient for rendering dynamic content.\n// I used Tailwind CSS for styling because:\n\n// It’s a utility-first framework that makes it fast to build custom designs.\n// It keeps the CSS codebase clean and easy to manage.\n//               </p>\n//             </div>\n//             <div className=\"bg-white p-6 rounded-md shadow-md hover:shadow-lg transition-all duration-300\">\n//               <h4 className=\"text-xl font-semibold text-black\">Learning Joureny</h4> {/* Changed to text-black */}\n//               <p className=\"text-gray-500 text-sm\">October 30, 2024</p>\n//               <p className=\"mt-2 text-black\">\n//                 React has been a game-changer in the way I build user interfaces. In this post, I share my experience...\n//               </p>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </section>\n//   );\n// };\n\n// export default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Contact","_s","name","setName","email","setEmail","message","setMessage","handleSubmit","e","preventDefault","formData","response","fetch","method","headers","body","JSON","stringify","data","json","status","console","log","error","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","rows","_c","$RefreshReg$"],"sources":["C:/Users/imadm/my-portfolio/src/components/Contact.js"],"sourcesContent":[" \r\n\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nconst Contact = () => {\r\n  // Set up state for form fields\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = {\r\n      name: name,\r\n      email: email,\r\n      message: message,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/send-email', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.status === 200) {\r\n        console.log('Email sent successfully!');\r\n      } else {\r\n        console.error('Error sending email');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section id=\"contact\" className=\"bg-black text-white py-16 px-8\">\r\n      <h2 className=\"text-4xl font-bold text-center mb-8\">Contact Me</h2>\r\n      <div className=\"flex flex-col md:flex-row gap-8\">\r\n        <div className=\"md:w-1/2\">\r\n          <h3 className=\"text-2xl font-semibold mb-4\">Get in Touch</h3>\r\n          <form className=\"space-y-4\" onSubmit={handleSubmit}>\r\n            <div>\r\n              <label htmlFor=\"name\" className=\"block text-sm font-medium\">\r\n                Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                className=\"w-full p-3 mt-1 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-purple-600 text-black\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)} // Bind to state\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"block text-sm font-medium\">\r\n                Email\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                className=\"w-full p-3 mt-1 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-purple-600 text-black\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)} // Bind to state\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"message\" className=\"block text-sm font-medium\">\r\n                Message\r\n              </label>\r\n              <textarea\r\n                id=\"message\"\r\n                name=\"message\"\r\n                rows=\"4\"\r\n                className=\"w-full p-3 mt-1 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-purple-600 text-black\"\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)} // Bind to state\r\n                required\r\n              ></textarea>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full bg-purple-600 text-white py-3 mt-4 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-600\"\r\n            >\r\n              Send Message\r\n            </button>\r\n          </form>\r\n        </div>\r\n        {/* Blog section next to Contact form */}\r\n        <div className=\"md:w-1/2\">\r\n          <h3 className=\"text-2xl font-semibold mb-4 text-white\">My Blog</h3>\r\n          <div className=\"space-y-4\">\r\n            <div className=\"bg-white p-6 rounded-md shadow-md hover:shadow-lg transition-all duration-300\">\r\n              <h4 className=\"text-xl font-semibold text-black\">How I Built My Portfolio</h4>\r\n              <p className=\"text-gray-500 text-sm\">November 22, 2024</p>\r\n              <p className=\"mt-2 text-black\">\r\n              Building my portfolio has been a rewarding journey that reflects my growth as a web developer and showcases my technical expertise. Here’s a breakdown of how I brought it to life, step by step:\r\n\r\n1. Planning and Conceptualization\r\nI started with a clear vision of what my portfolio should achieve:\r\n\r\nShowcase my skills and projects in a structured and visually appealing way.\r\nHighlight my technical strengths in both front-end and back-end development.\r\nBuild a platform that is functional, responsive, and easy to update.\r\n2. Front-End Development\r\nFor the front-end, I used React.js, leveraging its component-based architecture to create reusable, dynamic, and responsive components. Key features include:\r\n\r\nTailwind CSS for styling: This made the development process faster and allowed me to implement a sleek, modern design.\r\nInteractive Elements: I integrated features like a carousel for project images, animated stats, and smooth scroll functionality to make the user experience engaging.\r\nA clean, black-and-white theme to align with my personal aesthetic.\r\n3. Back-End and Server-Side Functionality\r\nI set up a Node.js and Express server to handle the back-end needs of the portfolio:\r\n\r\nContact Form: Implemented a contact form using Nodemailer to send emails securely. This involved setting up a back-end API and integrating Gmail's SMTP server with proper environment variable security.\r\nEnsured the server was scalable and deployed alongside the front-end seamlessly.\r\n4. Deployment and Hosting\r\nI deployed my portfolio using Vercel, a platform that excels in hosting React applications:\r\n\r\nCustom Domains: Vercel allowed me to deploy my front-end and back-end separately or together.\r\nOptimized for performance with fast loading times and smooth navigation.\r\n5. Key Features of the Portfolio\r\nAbout Section: Highlights my journey and passion for web development with interactive design elements.\r\nProjects Section: Each project is presented with detailed descriptions and an image carousel showcasing multiple visuals per project.\r\nSkills Section: Lists my technical expertise in tools and frameworks like React, Node.js, MongoDB, Tailwind CSS, and more.\r\nDynamic Stats: Animated counters for metrics like completed projects and years of experience.\r\nContact Section: A functional contact form integrated with back-end email handling.\r\n6. Challenges and Solutions\r\nBuilding this portfolio presented several challenges:\r\n\r\nBack-End Security: Managing secure email communication required careful configuration of environment variables and app passwords.\r\nResponsive Design: Ensuring the site looked great across all devices was a priority, achieved through Tailwind CSS utilities.\r\nCarousel Integration: Selecting and customizing a React-based carousel library to suit my needs for displaying multiple images dynamically.\r\n7. Outcome and Learnings\r\nThe process of building my portfolio not only allowed me to showcase my skills but also provided me with valuable experience in full-stack development:\r\n\r\nEnhanced my ability to design and deploy secure, scalable applications.\r\nImproved my knowledge of deployment platforms and server-side integration.\r\nGained insights into creating a cohesive user experience.\r\nFuture Plans\r\nI plan to continuously update my portfolio with new projects, skills, and features, such as:\r\n\r\nIntegrating real-time data using web sockets or APIs.\r\nAdding blogs or articles about my journey in web development.\r\nImplementing advanced animations and transitions to improve interactivity.\r\nThis portfolio is a reflection of my passion for web development and my commitment to delivering high-quality, user-focused solutions.\r\n              </p>\r\n            </div>\r\n            <div className=\"bg-white p-6 rounded-md shadow-md hover:shadow-lg transition-all duration-300\">\r\n              <h4 className=\"text-xl font-semibold text-black\">Learning Journey</h4>\r\n              <p className=\"text-gray-500 text-sm\">October 30, 2024</p>\r\n              <p className=\"mt-2 text-black\">\r\n                React has been a game-changer in the way I build user interfaces...\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n// const Contact = () => {\r\n//   return (\r\n//     <section id=\"contact\" className=\"bg-black text-white py-16 px-8\">\r\n//       <h2 className=\"text-4xl font-bold text-center mb-8\">Contact Me</h2>\r\n//       <div className=\"flex flex-col md:flex-row gap-8\">\r\n//         <div className=\"md:w-1/2\">\r\n//           <h3 className=\"text-2xl font-semibold mb-4\">Get in Touch</h3>\r\n//           <form className=\"space-y-4\">\r\n//             <div>\r\n//               <label htmlFor=\"name\" className=\"block text-sm font-medium\">\r\n//                 Name\r\n//               </label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 id=\"name\"\r\n//                 name=\"name\"\r\n//                 className=\"w-full p-3 mt-1 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-purple-600 text-black\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label htmlFor=\"email\" className=\"block text-sm font-medium\">\r\n//                 Email\r\n//               </label>\r\n//               <input\r\n//                 type=\"email\"\r\n//                 id=\"email\"\r\n//                 name=\"email\"\r\n//                 className=\"w-full p-3 mt-1 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-purple-600 text-black\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label htmlFor=\"message\" className=\"block text-sm font-medium\">\r\n//                 Message\r\n//               </label>\r\n//               <textarea\r\n//                 id=\"message\"\r\n//                 name=\"message\"\r\n//                 rows=\"4\"\r\n//                 className=\"w-full p-3 mt-1 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-purple-600 text-black\"\r\n//                 required\r\n//               ></textarea>\r\n//             </div>\r\n//             <button\r\n//               type=\"submit\"\r\n//               className=\"w-full bg-purple-600 text-white py-3 mt-4 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-600\"\r\n//             >\r\n//               Send Message\r\n//             </button>\r\n//           </form>\r\n//         </div>\r\n//         {/* Blog section next to Contact form */}\r\n//         <div className=\"md:w-1/2\">\r\n//           <h3 className=\"text-2xl font-semibold mb-4 text-white\">My Blog</h3> {/* Changed to text-white */}\r\n//           <div className=\"space-y-4\">\r\n//             <div className=\"bg-white p-6 rounded-md shadow-md hover:shadow-lg transition-all duration-300\">\r\n//               <h4 className=\"text-xl font-semibold text-black\">How I Built My Portfolio</h4> {/* Changed to text-black */}\r\n//               <p className=\"text-gray-500 text-sm\">November 22, 2024</p>\r\n//               <p className=\"mt-2 text-black\">\r\n//               Building my personal portfolio was a key project for me, not only because it represents my work, but also because it allowed me to showcase my web development skills. In this post, I’ll walk you through how I built my portfolio from scratch, the technologies I used, the design choices I made, and some lessons I learned along the way.\r\n\r\n// 1. Defining the Goal\r\n// The first step in building my portfolio was to define its purpose. I wanted it to:\r\n\r\n// Showcase my web development skills.\r\n// Provide a space for my projects, blogs, and skills.\r\n// Be easy to update as I work on new projects.\r\n// Have a minimalist design that focuses on the content.\r\n// 2. Planning the Structure\r\n// Next, I planned out the basic structure of my portfolio. I decided to include the following sections:\r\n\r\n// Home: A brief introduction, my name, and a short tagline.\r\n// About: A section where I talk about myself and my journey as a developer.\r\n// Projects: A showcase of the projects I’ve worked on, each with descriptions and images.\r\n// Skills: A section highlighting my technical skills, tools, and technologies I am proficient in.\r\n// Contact: A form for potential clients or employers to get in touch with me.\r\n// Blog: A place for sharing my thoughts, tutorials, and experiences in the field of web development.\r\n// 3. Choosing the Technologies\r\n// For the front-end, I chose to use React to build the components of my portfolio. React is a great choice because:\r\n\r\n// It allows me to build reusable components.\r\n// It’s highly efficient for rendering dynamic content.\r\n// I used Tailwind CSS for styling because:\r\n\r\n// It’s a utility-first framework that makes it fast to build custom designs.\r\n// It keeps the CSS codebase clean and easy to manage.\r\n//               </p>\r\n//             </div>\r\n//             <div className=\"bg-white p-6 rounded-md shadow-md hover:shadow-lg transition-all duration-300\">\r\n//               <h4 className=\"text-xl font-semibold text-black\">Learning Joureny</h4> {/* Changed to text-black */}\r\n//               <p className=\"text-gray-500 text-sm\">October 30, 2024</p>\r\n//               <p className=\"mt-2 text-black\">\r\n//                 React has been a game-changer in the way I build user interfaces. In this post, I share my experience...\r\n//               </p>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </section>\r\n//   );\r\n// };\r\n\r\n// export default Contact;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}